{"title":"CUPS","uid":"c3e183fc2bf9eda0ba62fc2811e4addd","slug":"折腾/CUPS","date":"2024-08-09T13:33:28.000Z","updated":"2025-08-05T05:52:18.398Z","comments":true,"path":"api/articles/折腾/CUPS.json","keywords":null,"cover":[],"content":"<p>最早是在N1上折腾CUPS，手机只能支持单面打印。后面OP上有USB共享打印（简单点两下就可以了），另外很少用到手机打印就舍弃了，毕竟不用每次重装系统都再配置。<br>这次想重新配一下cups，拉取镜像老终端，印象中遇到过这种情况，并且当初解决了。但现在毫无头绪。<br>故打算写一点东西，把遇到的问题列下来，以防下一次还受折磨。</p>\n<h3 id=\"拉取镜像问题\"><a href=\"#拉取镜像问题\" class=\"headerlink\" title=\"拉取镜像问题\"></a>拉取镜像问题</h3><h1 id=\"一、打印功能\"><a href=\"#一、打印功能\" class=\"headerlink\" title=\"一、打印功能\"></a>一、打印功能</h1><p>家里有一台 HP LaserJet M1005 MFP 古董打印机，只有usb接口，本来是通过windows电脑实现家庭局域网共享的。在电脑上安装Air Printert软件，可以实现苹果手机无线打印。不过每次打印都要开电脑，比较麻烦。也不可能为了个打印机电脑24小时开机。最近折腾了一下，通过N1盒子安装cups，实现了无线打印，记录一下，以免以后自己忘了怎么操作。</p>\n<p>过程主要参考恩山论坛大佬jysky的文章<a href=\"https://www.right.com.cn/forum/thread-8220309-1-1.html\">《[N1盒子] docker安装cups让打印机实现无线打印（支持PC、IOS、安卓airprint）》</a></p>\n<p>另外还参考了这篇文章：openwrt软路由（x86）做打印服务器，用docker安装cups&#x2F;airprint_NAS存储_什么值得买</p>\n<p>将打印机连接到N1的usb接口。</p>\n<p>进入openwrt——系统——TTYD终端，输入以下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">       --name=cups \\</span><br><span class=\"line\">       --restart=always \\</span><br><span class=\"line\">       --net=host \\</span><br><span class=\"line\">       -v /var/run/dbus:/var/run/dbus \\</span><br><span class=\"line\">       -v ~/airprint_data/config:/config \\</span><br><span class=\"line\">       -v ~/airprint_data/services:/services \\</span><br><span class=\"line\">       --device /dev/bus \\</span><br><span class=\"line\">       --device /dev/usb \\</span><br><span class=\"line\">       -e CUPSADMIN=<span class=\"string\">&quot;admin&quot;</span> \\</span><br><span class=\"line\">       -e CUPSPASSWORD=<span class=\"string\">&quot;password&quot;</span> \\</span><br><span class=\"line\">       jysky007/cups:v1</span><br></pre></td></tr></table></figure>\n\n\n<p>此容器只支持N1、贝壳云、我家云、粒子云、等arm处理器的机器。</p>\n<p>浏览器打开192.168.XXX.XXX:631 （前面为N1盒子ip地址，端口631）进入cups管理界面。cups的默认用户名和密码是print&#x2F;print，不过看上面的代码，大佬已经把用户名和密码改成admin&#x2F;password了。</p>\n<p>之后点击Add Printer，选择自己的打印机，再选择驱动，N1等ARM处理器的要选带Foomatic&#x2F;foo2xqx字样的驱动，别的驱动是适配X86的。</p>\n<p><img src=\"https://raw.githubusercontent.com/anaconda110/MyPic/img/img/a0661f0e6e3ef787932c54e8100a4a79.png\" alt=\"img\"></p>\n<p>后面全部默认，最后完成打印机添加。</p>\n<p>大佬的帖子中PC端直接搜索打印机就能搜到，我自己的情况不行，需要手动添加，win7和win10方法一样：</p>\n<p>设备和打印机——添加打印机——添加网络、无线或Bluetooth打印机——我需要的打印机不再列表中——按名称选择共享打印机——<a href=\"http://192.168.xxx.xxx:631/printers/HP_LaserJet_M1005%E2%80%94%E2%80%94%E6%B7%BB%E5%8A%A0%E9%A9%B1%E5%8A%A8%E3%80%82\">http://192.168.XXX.XXX:631/printers/HP_LaserJet_M1005——添加驱动。</a> </p>\n<p>如果windows提供的列表中没有匹配的驱动（比如我的古董打印机），可以去<a href=\"http://catalog.update.microsoft.com/\">Microsoft Update Catalog</a> 搜索打印机型号，我搜索的是M1005，选择合适的驱动下载。</p>\n<p>下载下来的cab文件解压缩，里边包含inf安装文件。</p>\n<p>接着上面的添加驱动——从磁盘安装——浏览找到cab文件里的HPLJM1005.INF——完成驱动安装。如此windows电脑端打印机就添加成功了。</p>\n<p>HP打印机的驱动安装方法可以参考下面的文章：HP LaserJet - 在 Windows 10 电脑上，通过网络安装面向 HP 打印机的 Windows 驱动程序 | HP®客户支持</p>\n<p>iOS端能直接搜索到打印机，不用安装第三方软件。没有安卓手机，未测试，大佬帖子里说也能直接搜到。</p>\n<p>最后，大佬帖子中提到打印机如果断电再开机， 发送打印任务就无法打印了，必须重启cups。</p>\n<h1 id=\"二、扫描功能\"><a href=\"#二、扫描功能\" class=\"headerlink\" title=\"二、扫描功能\"></a>二、扫描功能</h1><p>最近发现上述操作只能实现无线打印，但无法使用扫描功能。网上搜了一下，也有能实现扫描的docker镜像，是通过SANE实现的。</p>\n<p>网址如下，里面有详细介绍：</p>\n<p><a href=\"https://github.com/sbs20/scanservjs\">https://github.com/sbs20/scanservjs</a></p>\n<p>项目SANE的网址如下：</p>\n<p><a href=\"http://www.sane-project.org/\">SANE - Scanner Access Now Easy</a></p>\n<p>安装方法一样，进入openwrt——系统——TTYD终端，输入以下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull sbs20/scanservjs:latest</span><br><span class=\"line\">docker <span class=\"built_in\">rm</span> --force scanservjs-container 2&gt; /dev/null</span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  -p 8080:8080 \\</span><br><span class=\"line\">  -v /var/run/dbus:/var/run/dbus \\</span><br><span class=\"line\">  --net=host \\  <span class=\"comment\">#此行是我自己添加的，默认bridge模式貌似无法访问，改成host模式可行</span></span><br><span class=\"line\">  --restart unless-stopped \\</span><br><span class=\"line\">  --name scanservjs-container \\</span><br><span class=\"line\">  --privileged sbs20/scanservjs:latest</span><br></pre></td></tr></table></figure>\n\n\n<p>浏览器打开192.168.XXX.XXX:8080 （前面为N1盒子ip地址，端口8080）进入扫描管理界面，即可直接扫描。</p>\n<p>另外docker网络模式参看下文：<a href=\"https://blog.csdn.net/succing/article/details/122433770?spm=1001.2014.3001.5506\">Docker学习：容器五种(3+2)网络模式 | bridge模式 | host模式 | none模式 | container 模式 | 自定义网络模式详解_docker的五种网络模式总结_血煞长虹的博客-CSDN博客</a></p>\n<h1 id=\"三、常见问题\"><a href=\"#三、常见问题\" class=\"headerlink\" title=\"三、常见问题\"></a>三、常见问题</h1><p>问题1：打印机一旦关机再开机默认就不能用了，必须重新去luci里面重启cups服务才行，如何解决？</p>\n<p>&#x2F;etc&#x2F;hotplug.d&#x2F;usb&#x2F;10-usb_printer文件里面添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sleep</span> 10</span><br><span class=\"line\">    /root/cupsstart.sh</span><br></pre></td></tr></table></figure>\n\n<p>然后到&#x2F;root目录添加脚本cupsstart.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">docker restart cups</span><br></pre></td></tr></table></figure>\n\n\n<p>把脚本的权限改为0777</p>\n<p>问题2：N1在openwrt的docker中运行的cups，如何实现开启打印机自动启动？</p>\n<p>第一步：找到目录&#x2F;etc&#x2F;hotplug.d&#x2F;usb，里面有一个10-usb_printer的文件，使用命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/hotplug.d/usb/10-usb_printer</span><br></pre></td></tr></table></figure>\n\n\n\n<p>打开文件后修改里面的内容为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> [ x<span class=\"string\">&quot;<span class=\"variable\">$INTERFACE</span>&quot;</span> = x<span class=\"string\">&quot;7/1/1&quot;</span> ] || [ x<span class=\"string\">&quot;<span class=\"variable\">$INTERFACE</span>&quot;</span> = x<span class=\"string\">&quot;7/1/2&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        /usr/bin/usb_printer_hotplug <span class=\"string\">&quot;<span class=\"variable\">$PRODUCT</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$ACTION</span>&quot;</span></span><br><span class=\"line\">              <span class=\"built_in\">sleep</span> 10</span><br><span class=\"line\">                  /root/cupsstart.sh</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n\n<p>第二步：进入root目录，新建cupsstart.sh文件，命令为：vi cupsstart.sh，然后修改其内容为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">docker restart cups</span><br></pre></td></tr></table></figure>\n\n<p>保存，设置文件权限为0775，命令为：<code>chmod 0775 cupsstart.sh</code><br>第三步，把打印机关闭后再开机，等待十几秒后，再看看是不是又可以愉快的打印了！<br>此方法在打印机开机时，会触发docker中的cups自动运行，关机时，cups也会自动运行，但是因为找不到打印机，所以此时的cups是不能正常工作的，相当于打印机关机的效果。</p>\n<p>问题3：docker容器时区不对导致时间不对</p>\n<p>最近又遇到一个问题，docker容器部署cups，发现时间少了8个小时，于是想到是docker容器的内部时区问题。docker容器一般是debian系统，默认是UTC标准时间。可通过以下命令修改docker时区：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.先进容器内部</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it 容器ID bash   </span><br><span class=\"line\"><span class=\"comment\"># 2.设置上海时间</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>\n<p>如果进入容器修改的时候总是报&#x2F;etc&#x2F;localtime 文件只读，不让修改，也可以用以下命令：</p>\n<p><code>docker cp /etc/localtime:容器ID/etc/localtime</code></p>\n","feature":false,"text":"最早是在N1上折腾CUPS，手机只能支持单面打印。后面OP上有USB共享打印（简单点两下就可以了），另外很少用到手机打印就舍弃了，毕竟不用每次重装系统都再配置。...","permalink":"/post/折腾/CUPS","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"折腾","slug":"折腾","count":4,"path":"api/categories/折腾.json"}],"tags":[{"name":"cups","slug":"cups","count":1,"path":"api/tags/cups.json"},{"name":"网络打印","slug":"网络打印","count":1,"path":"api/tags/网络打印.json"},{"name":"opwrt","slug":"opwrt","count":1,"path":"api/tags/opwrt.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">拉取镜像问题</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%89%93%E5%8D%B0%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">一、打印功能</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%89%AB%E6%8F%8F%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">二、扫描功能</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">三、常见问题</span></a>","author":{"name":"Oraw","slug":"blog-author","avatar":"https://raw.githubusercontent.com/anaconda110/MyPic/img/img/16991083173741774.jpg","link":"/","description":"我只身前行，却仿佛带着一万雄兵。","socials":{"github":"https://anaconda110.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Python股票交易从入门到实践","uid":"19f44eeb22786c1b4f14b8438170f809","slug":"培训班/Python股票交易从入门到实践","date":"2025-06-26T19:46:39.000Z","updated":"2025-08-05T05:52:18.397Z","comments":true,"path":"api/articles/培训班/Python股票交易从入门到实践.json","keywords":null,"cover":[],"text":" python语法1.目录结构 ​ 通常一个包由_init_.py和其他诸多.py文件构成。_init_.py是包的标志性文件，Python解释器通过 ","permalink":"/post/培训班/Python股票交易从入门到实践","photos":[],"count_time":{"symbolsCount":76,"symbolsTime":"1 mins."},"categories":[{"name":"培训班","slug":"培训班","count":3,"path":"api/categories/培训班.json"}],"tags":[{"name":"量化","slug":"量化","count":1,"path":"api/tags/量化.json"}],"author":{"name":"Oraw","slug":"blog-author","avatar":"https://raw.githubusercontent.com/anaconda110/MyPic/img/img/16991083173741774.jpg","link":"/","description":"我只身前行，却仿佛带着一万雄兵。","socials":{"github":"https://anaconda110.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"windows命令行与批处理","uid":"6ee490786533527d28bf76950334c3d2","slug":"基础/windows命令行与批处理","date":"2024-08-03T09:28:21.000Z","updated":"2025-08-05T05:52:18.398Z","comments":true,"path":"api/articles/基础/windows命令行与批处理.json","keywords":null,"cover":null,"text":"命令行cmd与PowerShellcmd是power shell的子集。 说明 不区分大小写 按上下键可以查看历史命令 Tab键可以自动补全 使用/?或/hel...","permalink":"/post/基础/windows命令行与批处理","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"基础","slug":"基础","count":3,"path":"api/categories/基础.json"}],"tags":[{"name":"语法","slug":"语法","count":3,"path":"api/tags/语法.json"},{"name":"基础","slug":"基础","count":2,"path":"api/tags/基础.json"}],"author":{"name":"Oraw","slug":"blog-author","avatar":"https://raw.githubusercontent.com/anaconda110/MyPic/img/img/16991083173741774.jpg","link":"/","description":"我只身前行，却仿佛带着一万雄兵。","socials":{"github":"https://anaconda110.github.io/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}